{
  "categories": [],
  "content": "A comprehensive guide to run a Validator",
  "created": "2023-11-07T13:27:15.340Z",
  "guideType": "onboarding",
  "key": "running-a-validator-arbitrum-university-967",
  "name": "Running a Validator",
  "publishStatus": "Live",
  "steps": [
    {
      "content": "## What is a Validator?\nIn the Arbitrum ecosystem, certain nodes opt to function as validators, playing a crucial role in monitoring and advancing the rollup protocol to ensure the chain's state progresses securely. These nodes validate the actions on the chain by confirming the correctness of inbox messages, thus maintaining the integrity of the protocol. Not all nodes are validators; some may choose to compute the correct chain behavior independently without participating in the consensus mechanism. \n\n### Types of Validators \n\n**Active Validator**\nThis strategy involves validators proactively participating in the network by proposing new rollup blocks and maintaining a constant stake in the network to do so. Their main goal is to advance the state of the chain. There is typically no need for more than one honest active validator, as having more than one can be resource-intensive.\n\n**Defensive Validator**\nDefensive validators monitor the rollup protocol and only act if they detect an incorrect block being proposed. They will then either propose a correct block or stake on an existing correct block. This strategy is more resource-efficient, as it stakes only when necessary to correct or prevent potential dishonest actions.\n\n**Watchtower Validator**\nWatchtower validators perform a passive monitoring role, where they do not stake but keep an eye on the rollup protocol. If they spot an incorrect block, they alert other parties so they can take action. It relies on other staking parties to intervene before the deadline for the incorrect block expires, allowing for a response window of several days.\n\n## Validation Strategies\n\nValidators in the Arbitrum network can adopt several strategies, depending on their roles and permissions. These strategies include:\n\n#### Defensive (allowlist required):\nValidators post stakes and initiate challenges if their local state conflicts with the on-chain assertion. This strategy requires a wallet to post stakes and will only incur costs if a discrepancy is detected. \n\n#### StakeLatest (allowlist required):\n\nValidators remain staked on the latest assertion, ready to challenge any incorrect assertions. This proactive approach requires a wallet and incurs some gas expenditure with each new assertion.\n\n#### ResolveNodes (allowlist required):\n\nIn addition to staying staked on the latest assertion, validators resolve any unconfirmed assertions and challenge incorrect ones. This method requires a wallet and consumes gas for resolving unconfirmed assertions or when a new assertion is created.\n\n#### MakeNodes (allowlist required):\n\nValidators continuously generate new assertions and challenge any incorrect ones found. This is the most gas-intensive strategy as it requires a wallet, consistent staking, and may incur costs from gas spent on reverted calls when multiple validators attempt to make a new assertion simultaneously. \n\n#### Watchtower (no allowlist required):\n\nThis strategy is accessible to all nodes and operates in a monitoring capacity. A Watchtower node will log an error if it detects an on-chain assertion that diverges from the local computation of the chain state. It is a passive strategy that does not engage with the chain directly and, therefore, does not require a wallet or incur on-chain expenses. By default, all nodes (full and archive) have Watchtower mode enabled. ",
      "name": "What is a Validator?",
      "stepItems": [],
      "uuid": "7bf74786-0745-43cf-8170-39f2c8f663cc"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "label": "Full Name",
          "required": false,
          "type": "PublicShortInput",
          "uuid": "73e117ec-13ea-4a25-bafd-66b2104e4865"
        },
        {
          "answerKeys": [
            "choice_1",
            "choice_2",
            "choice_3"
          ],
          "choices": [
            {
              "content": "Choice 1",
              "key": "choice_1"
            },
            {
              "content": "Choice 2",
              "key": "choice_2"
            },
            {
              "content": "Choice 3",
              "key": "choice_3"
            },
            {
              "content": "Choice 4",
              "key": "choice_4"
            }
          ],
          "content": "Contents of the question",
          "type": "MultipleChoice",
          "uuid": "f05c3999-b7ca-48e8-b63d-4cae6b3a9171",
          "explanation": "Explanation of the question"
        }
      ],
      "uuid": "792c3404-3c17-4f53-8951-a7e5e9a665ac"
    },
    {
      "content": "## How to Run a Watchtower Validator?\n\nRunning a watchtower validator is an integral part of maintaining the integrity and robustness of arbitrum rollup. Below is listed all that you need to know about running a watchtower validator:\n\n- Every node, whether it's a full node or an archive node, operates in Watchtower mode by default.\n\n- Should a discrepancy be identified, a node in Watchtower mode will record an error, which includes the phrase \"found incorrect assertion in watchtower mode\".\n\n- To confirm the activation of Watchtower mode, the following message should be present in the log files:\n`INFO [09-28|18:43:49.367] running as validator                     txSender=nil actingAsWallet=nil whitelisted=false strategy=Watchtower`\n\n    \"Strategy\" should be `Watchtower`\n\n    The presence of the log entry \"validation succeeded\" indicates that the L2 block validator is functioning correctly\n\n    The appearance of the log entry \"found correct assertion\" signifies that the L1 validator is operating as intended.\n\n- Operating in Watchtower mode incurs a minor increase in execution and memory usage. To turn off this mode, apply the parameter `--node.staker.enable=false`.\n\n",
      "name": "Run Watchtower Validator",
      "stepItems": [],
      "uuid": "d5c43d16-0c09-42e2-8526-b494c7ffa349"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "cba9faea-8dae-4085-abe7-674963fb0f8d"
    },
    {
      "content": "## Validator Wallet Requirements\n\n| Validator            | Wallet Requirement                                                                |\n|----------------------|-----------------------------------------------------------------------------------|\n| Active Validator     | Always                                                                            |   |   |\n| Defensive Validator  | Requires configured wallet, but funded only when an incorrect assertion is logged |   |\n| Watchtower Validator | Never                                                                             |\n\n## Allowlisted Validator\n\nAllowlisted validators are a selected group of nodes with exclusive permissions within a blockchain network. These have the unique authority to submit attestations regarding the current state of the chain on the Rollup contracts on the Layer 1 (L1) blockchain. They also have the power to challenge the attestations made by others if they detect any discrepancies or inaccuracies. This is crucial for maintaining the security and accuracy of the Rollup process, as it ensures that only trusted participants can make and verify critical assertions about the state of the blockchain.\n\n### Creating a Wallet for an Allowlisted Validator\n\n- Here's a sample command instructing Nitro to generate a validator wallet for Arbitrum One and then terminate the operation:\n`docker run --rm -it  -v /some/local/dir/arbitrum:/home/user/.arbitrum offchainlabs/nitro-node:v2.1.1-e9d8842 --parent-chain.connection.url=https://l1-mainnet-node:8545 --l2.chain-id=42161 --node.staker.enable --parent-chain.wallet.only-create-key --parent-chain.wallet.password=\"SOME SECURE PASSWORD\"`\n\n- A wallet file will be generated in the mounted directory, specifically within the `arb1/wallet/` directory for Arb1, or `nova/wallet/` directory for Nova. It's important to securely back up the wallet, as it is the sole method for withdrawing your stake when you choose to do so.\n\n",
      "name": "Wallet for Allowlisted Validator",
      "stepItems": [],
      "uuid": "e8989e11-37b2-43e6-a12b-7445aeba64df"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "7838a21b-dedb-4c3c-85d7-5387e31f9010"
    },
    {
      "content": "## Running an Allowlisted Defensive Validator\n\nRunning an allowlisted defensive validator is a significant responsibility, as it involves overseeing and safeguarding the integrity of the blockchain network. Following are provided steps to set up and operate an allowlisted defensive validator, ensuring you are well-prepared to perform this critical role effectively.\n\n- To operate a defensive validator, it is necessary to have previously established a wallet by following the steps outlined earlier. It is not required to provide initial funding for wallets associated with defensive validators.\n\n- When a deviation is identified by a defensive validator, it will record the message \"bringing defensive validator online because of incorrect assertion\" and will then hold operations until funds are deposited into the wallet, which will enable the posting of a stake and the initiation of a dispute.\n\n- Here's a sample command for initiating an allowlisted defensive validator on Arbitrum One:\n`docker run --rm -it  -v /some/local/dir/arbitrum:/home/user/.arbitrum offchainlabs/nitro-node:v2.1.1-e9d8842 --parent-chain.connection.url=https://l1-mainnet-node:8545 --l2.chain-id=42161 --node.staker.enable --node.staker.strategy=Defensive --parent-chain.wallet.password=\"SOME SECURE PASSWORD\"`\n\n- To confirm the validator is operational, the following log entry will indicate that the wallet has been properly configured:\n`INFO [09-28|18:43:49.367] running as validator                     txSender=0x... actingAsWallet=0x... whitelisted=true strategy=Defensive`\n\n    Once your wallet has been included in the allowlist, the status for 'whitelisted' should read 'true'.\n\n    \"Strategy\" should be `Defensive`\n\n     The fields \"txSender\" and \"actingAsWallet\" should both contain values and not be nil.\n\n     The log message \"validation succeeded\" indicates that the L2 block validator is functioning properly.\n\n     The log entry \"found correct assertion\" is an indication that the L1 validator is active and performing correctly.",
      "name": "Running a Defensive Validator",
      "stepItems": [],
      "uuid": "04fa81f2-b494-4528-93b8-40ca7537c1ac"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "868ae771-9d47-43b0-8d7e-f6ef6b2180b7"
    }
  ],
  "thumbnail": "https://d31h13bdjwgzxs.cloudfront.net/QmWy8EeMnxqx96VEPx2NBwzqtKxvMQqVVYvmPKgAYS2cUi",
  "uuid": "running-a-validator-arbitrum-university-967",
  "version": 1,
  "priority": 50
}