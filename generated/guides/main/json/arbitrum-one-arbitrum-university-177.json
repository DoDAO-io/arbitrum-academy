{
  "categories": [],
  "content": "Arbitrum One: Unraveling the intricacies of Arbitrum Rollup",
  "created": "2023-11-02T14:52:41.646Z",
  "guideType": "onboarding",
  "key": "arbitrum-one-arbitrum-university-177",
  "name": "Arbitrum One",
  "publishStatus": "Live",
  "steps": [
    {
      "content": "## Arbitrum One?\n\nArbitrum One is a Layer 2 (L2) optimistic rollup chain that aims to improve the performance and user experience of Ethereum. It is built on the Arbitrum Rollup protocol and settles transactions on Ethereum's Layer 1 (L1) chain. The goal of Arbitrum One is to enable the development of high-performance Ethereum decentralized applications (dApps) with low transaction costs and Ethereum-grade security guarantees, all without introducing additional trust assumptions.\n\n#### Features of Arbitrum One\n\nArbitrum One utilizes the Nitro technology stack, which is based on a \"Geth-at-the-core\" architecture. This technology stack provides advanced calldata compression, separate contexts for common execution and fault proving, Ethereum L1 gas compatibility, and more. By leveraging these features, Arbitrum One is able to overcome the limitations of transaction throughput on the Ethereum Mainnet (L1) and offer a scalable solution for handling transactions off L1.\n\n#### Dispute Resolution\n\nArbitrum One employs a multi-round interactive design to efficiently resolve disputes on L1 at a low cost. When a validator on L2 posts bundled data to L1, they lock a bond in a smart contract. If someone believes the transaction data is incorrect, they can issue a challenge within a specified time window and also lock a bond in the smart contract. The validator and the challenger then work together to split the disputed part in a dichotomous way off-chain until the dispute is narrowed down to a specific part. Finally, they go to L1 to resolve the dispute.\n",
      "name": "What is Arbitrum One?",
      "stepItems": [],
      "uuid": "4a797c46-12fd-437d-9784-346875967164"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [
        {
          "label": "Full Name",
          "required": false,
          "type": "PublicShortInput",
          "uuid": "8f3de2ec-9615-4352-98c4-b2b61a738717"
        },
        {
          "answerKeys": [
            "choice_1",
            "choice_2",
            "choice_3"
          ],
          "choices": [
            {
              "content": "Choice 1",
              "key": "choice_1"
            },
            {
              "content": "Choice 2",
              "key": "choice_2"
            },
            {
              "content": "Choice 3",
              "key": "choice_3"
            },
            {
              "content": "Choice 4",
              "key": "choice_4"
            }
          ],
          "content": "Contents of the question",
          "type": "MultipleChoice",
          "uuid": "3c0a1bd5-a0ec-4929-9614-2702b739cdd7",
          "explanation": "Explanation of the question"
        }
      ],
      "uuid": "287bba79-de96-4fbe-addd-140a78c46939"
    },
    {
      "content": "## Arbitrum Rollup Protocol\n\nThe Arbitrum Rollup Protocol is a system that operates as a sub-module within Ethereum. Unlike regular Ethereum transactions, the protocol does not require every Arbitrum transaction to be processed by Ethereum nodes. Instead, Ethereum assumes that activity on Arbitrum follows the proper rules until proven otherwise. If a violation occurs, it can be disputed on Ethereum's layer 1 (L1), where fraud can be proven, invalid claims disregarded, and the malicious party penalized financially. This feature allows for adjudication and fraud-proofing on L1, ensuring the security inherited from Ethereum.\n\n## The Rollup Security\n\nThe rollup protocol's security is ensured by the presence of honest validators. Validators can choose to be stakers by placing an ETH deposit, which they can recover if they are not caught cheating. In most cases, only one validator will be staked, as long as there are no conflicting claims. The protocol allows for permissionless roles, but currently, on Arbitrum One, validators/stakers are allowlisted. Watchtower validators, who monitor the chain but do not take any on-chain actions, can be run permissionlessly. The key security feature of the rollup protocol is that any honest validator can enforce the correct execution of the chain, making the execution as trustless as Ethereum itself. This means that even in the presence of malicious actors, your transactions can be processed correctly, ensuring the integrity of the system.\n\n#### Confirming Transactions\n\nThe rollup protocol does not decide the results of transactions; it only confirms them. The results are determined by the sequence of messages in the chain's inbox. Once a transaction message is in the inbox, its result is known to the Arbitrum nodes, and they will report that the transaction is complete. The rollup protocol's role is to confirm the already occurred transaction results, allowing Ethereum to rely on them for operations such as processing fund withdrawals from Nitro back to L1. Confirming the results is necessary to prevent false claims and establish trust in a trustless manner.\n\nOne of the main reasons for confirming transaction results is to identify any lies or false claims. In a Layer 2 scaling system like Arbitrum, transactions can run without Ethereum having to process every transaction. However, a definitive and trustless way is needed to determine who is lying about a result. Once a result is confirmed, Ethereum becomes aware of it and can rely on it for further operations. This confirmation enables the processing of fund withdrawals from Nitro back to L1. By confirming results, Ethereum can trust the transactions that have taken place on Arbitrum.",
      "name": "Understanding Arbitrum Rollup",
      "stepItems": [],
      "uuid": "a622a2f6-e742-455b-9455-c724cbefae40"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "1aa5dfb6-6c34-43a5-b9ae-9f45f513b50e"
    },
    {
      "content": "## Working of Arbitrum Rollup\n\nArbitrum Rollup is an off-chain protocol that is managed by an on-chain Ethereum contract. It allows dapp developers to run their contracts on the Arbitrum Virtual Machine (VM). The state of the VM is organized as a Merkle Tree, which means that a cryptographic hash of the VM's state can be computed. This allows for the confirmation and finality of the VM's state at any point in the protocol.\n\n#### Disputable Assertions (DAs) \n\nDisputable Assertions play a crucial role in the Arbitrum Rollup protocol. A participant in the protocol can make a DA, which claims that starting from a specific state-hash, the VM can execute a certain number of computation steps and reach a new state-hash. The party making the DA must stake a deposit to validate its validity. If the DA is valid, the system enters a new state with the specified payments and log events. If the DA is invalid, it is rejected, and the state remains unchanged.\n\n## Addressing Limitations\n\nThe original Arbitrum protocol had limitations that have been addressed in the new Arbitrum Rollup protocol. \n\n#### Number of Active DAS\n\nOnly one DA could be active at a time, which limited the rate of progress of the VM. The new protocol allows for multiple DAs to be \"pipelined,\" enabling the VM to progress as fast as validating nodes can emulate its computations.\n\n#### Temporary Delays\n\nIn the original protocol, a malicious party could freeze a VM by challenging all DAs made for that VM. This could delay progress for a significant amount of time. The new protocol prevents this by only temporarily delaying on-chain recognition of outcomes that are already \"trustlessly final\" for honest parties.\n\n## RBlocks and Protocol Resolution\n\nThe Arbitrum Rollup protocol tracks a chain of RBlocks, which are separate from Layer 1 Ethereum blocks and Layer 2 Nitro blocks. Each RBlock contains claims made by its proposer, such as the predecessor RBlock number and the number of consumed inbox messages. The protocol eventually confirms or rejects each RBlock based on the correctness of these claims.\n\nValidators in the protocol have the option to agree or disagree with an RBlock. If they agree, they don't need to take any action. If they disagree, they can propose a different RBlock with a different result, leading to a challenge against the first RBlock's staker.\n\nThe protocol confirms or rejects RBlocks based on their deadlines. Confirmed RBlocks have been accepted and recorded by the Layer 1 contracts, while unresolved RBlocks are still awaiting resolution. Validators can continue proposing RBlocks without waiting for the previous one to be confirmed.\n",
      "name": "How does it work?",
      "stepItems": [],
      "uuid": "41ee7801-5700-4906-bb10-4d8d7e87e9bb"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "dc1888d0-1e86-43c3-a49e-06899a54b60e"
    },
    {
      "content": "## What is Staking\n\nStaking is a process in which individuals deposit funds into a blockchain network as a way to participate in the network's operations and earn rewards. By staking their funds, individuals contribute to the security and functionality of the network. Staking is commonly used in proof-of-stake (PoS) blockchain networks, where validators are chosen to create new blocks and validate transactions based on the amount of cryptocurrency they hold and are willing to \"stake\" as collateral.\n\nStaking also plays a crucial role in the consensus mechanism of a blockchain network. By staking their funds, individuals contribute to the overall security and decentralization of the network. The more funds that are staked, the more difficult it becomes for malicious actors to manipulate the network or carry out attacks.\n\n## Process of Staking\n\n#### Staking Funds\n\nWhen someone decides to stake their funds, they deposit a certain amount of cryptocurrency into a smart contract or a designated staking wallet. This amount is then locked up as collateral and cannot be accessed or withdrawn until the staking period ends or specific conditions are met. The staked funds act as a guarantee that the validator will act honestly and in the best interest of the network.\n\n#### Selecting Validators\n\nValidators are selected based on various factors, such as the amount of cryptocurrency they have staked and their reputation within the network. Once selected, validators are responsible for creating new blocks, validating transactions, and maintaining the network's integrity. In return for their services, validators receive rewards in the form of additional cryptocurrency.\n\n#### Ensuring Validator Honesty\n\nIf a validator fails to fulfill their duties or acts maliciously, they risk losing their staked funds. This serves as an incentive for validators to act honestly and in accordance with the network's rules. Additionally, stakers have the ability to challenge and dispute the actions of validators, further ensuring the network's security and fairness.",
      "name": "Staking",
      "stepItems": [],
      "uuid": "f7348a7d-f200-4414-96d6-39bd92294464"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "bad34284-ba34-49ed-96a0-6fc9d44f8aa0"
    },
    {
      "content": "",
      "name": "Rules to Confirm or Reject",
      "stepItems": [],
      "uuid": "04efe8e9-3a16-4650-9dba-185fc5833ea8"
    },
    {
      "content": "",
      "name": "Evaluation",
      "stepItems": [],
      "uuid": "db8f8e9c-5d93-4e4d-9f1a-546382bb4096"
    }
  ],
  "thumbnail": "https://d31h13bdjwgzxs.cloudfront.net/QmWy8EeMnxqx96VEPx2NBwzqtKxvMQqVVYvmPKgAYS2cUi",
  "uuid": "arbitrum-one-arbitrum-university-177",
  "version": 1,
  "priority": 50
}