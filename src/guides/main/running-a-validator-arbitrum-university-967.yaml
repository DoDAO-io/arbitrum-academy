categories: []
content: A comprehensive guide to run a Validator
created: '2023-12-14T14:45:23.488Z'
guideType: onboarding
key: running-a-validator-arbitrum-university-967
name: Running a Validator
publishStatus: Live
steps:
  - content: >
      Validators play a crucial role in the Arbitrum Rollup Protocol. Here's a
      concise explanation of what validators are and the functions they play
      within this system:


      ### What are Validators?

      In the context of the Arbitrum Rollup Protocol, validators are entities
      responsible for participating in the protocol to ensure the integrity and
      proper functioning of the network. They are akin to the enforcers or
      auditors of the network, ensuring that transactions and operations are
      executed correctly. Validators on the Arbitrum network can choose to be
      stakers, meaning they commit a deposit in ETH, which they can recover if
      they adhere to the rules and don't engage in malicious activities.





      ### Importance of Validators


      - **Ensuring Integrity**: They ensure the integrity of the blockchain by
      confirming transaction results.

      - **Security**: Their role is critical in maintaining the security of the
      blockchain, especially in the decentralized environment.

      - **Trustlessness**: Validators help in maintaining the trustless nature
      of the blockchain, where users don't need to trust any single party.


      ### Who Can Be a Validator?


      - **Open to All**: In principle, anyone can become a validator, though in
      practice, it's expected that parties with significant stakes in the chain
      (like developers, exchanges, or power users) will take up this role.

      - **Whitelisting**: Currently, on Arbitrum One, validators/stakers are
      whitelisted as part of a "State of Progressive Decentralization".
    name: What is a Validator?
    stepItems: []
    uuid: 7bf74786-0745-43cf-8170-39f2c8f663cc
  - content: >+
      ### Types of Validators 


      **Active Validator**

      This strategy involves validators proactively participating in the network
      by proposing new rollup blocks and maintaining a constant stake in the
      network to do so. Their main goal is to advance the state of the chain.
      There is typically no need for more than one honest active validator, as
      having more than one can be resource-intensive.


      **Defensive Validator**

      Defensive validators monitor the rollup protocol and only act if they
      detect an incorrect block being proposed. They will then either propose a
      correct block or stake on an existing correct block. This strategy is more
      resource-efficient, as it stakes only when necessary to correct or prevent
      potential dishonest actions.


      **Watchtower Validator**

      Watchtower validators perform a passive monitoring role, where they do not
      stake but keep an eye on the rollup protocol. If they spot an incorrect
      block, they alert other parties so they can take action. It relies on
      other staking parties to intervene before the deadline for the incorrect
      block expires, allowing for a response window of several days.



      ### Role and Functions of Validators in the Arbitrum Rollup Protocol


      1. **Staking**: Validators can choose to be stakers by depositing ETH as a
      stake. This stake can be recovered if they are not found to be cheating.
      The stake acts as a security deposit, ensuring validators act honestly.


      2. **Proposing and Confirming RBlocks**: Validators are responsible for
      proposing new rollup blocks (RBlocks) and confirming the correctness of
      existing ones. Each RBlock contains various information like the RBlock
      number, predecessor RBlock number, number of L2 blocks created, and a hash
      of outputs produced.


      3. **Security Enforcement**: A key feature of the rollup protocol is that
      any single honest validator can force the correct execution of the chain
      to be confirmed. This means validators play a crucial role in ensuring the
      security and trustlessness of the Arbitrum chain.


      4. **Handling Disputes**: In cases where there's a disagreement over an
      RBlock, validators may engage in challenges. If a validator disagrees with
      an RBlock, they can post another RBlock with a different result,
      potentially leading to a challenge against the first RBlock's staker.


      5. **Stake Management**: Validators manage their stakes by staking on
      RBlocks and their successors. They have to maintain their stake on the
      latest confirmed RBlock and can extend it to successors. If they lose a
      challenge, they forfeit their staked funds.

    name: Types and Roles
    stepItems:
      - label: Full Name
        required: false
        type: PublicShortInput
        uuid: 73e117ec-13ea-4a25-bafd-66b2104e4865
      - answerKeys:
          - choice_1
          - choice_2
          - choice_3
        choices:
          - content: Choice 1
            key: choice_1
          - content: Choice 2
            key: choice_2
          - content: Choice 3
            key: choice_3
          - content: Choice 4
            key: choice_4
        content: Contents of the question
        type: MultipleChoice
        uuid: f05c3999-b7ca-48e8-b63d-4cae6b3a9171
        explanation: Explanation of the question
    uuid: 792c3404-3c17-4f53-8951-a7e5e9a665ac
  - content: >-
      Validators in the Arbitrum network can adopt several strategies, depending
      on their roles and permissions. These strategies include:


      #### Defensive (allowlist required):

      Validators post stakes and initiate challenges if their local state
      conflicts with the on-chain assertion. This strategy requires a wallet to
      post stakes and will only incur costs if a discrepancy is detected. 


      #### StakeLatest (allowlist required):

      Validators remain staked on the latest assertion, ready to challenge any
      incorrect assertions. This proactive approach requires a wallet and incurs
      some gas expenditure with each new assertion.


      #### ResolveNodes (allowlist required):

      In addition to staying staked on the latest assertion, validators resolve
      any unconfirmed assertions and challenge incorrect ones. This method
      requires a wallet and consumes gas for resolving unconfirmed assertions or
      when a new assertion is created.


      #### MakeNodes (allowlist required):

      Validators continuously generate new assertions and challenge any
      incorrect ones found. This is the most gas-intensive strategy as it
      requires a wallet, consistent staking, and may incur costs from gas spent
      on reverted calls when multiple validators attempt to make a new assertion
      simultaneously. 


      #### Watchtower (no allowlist required):

      This strategy is accessible to all nodes and operates in a monitoring
      capacity. A Watchtower node will log an error if it detects an on-chain
      assertion that diverges from the local computation of the chain state. It
      is a passive strategy that does not engage with the chain directly and,
      therefore, does not require a wallet or incur on-chain expenses. By
      default, all nodes (full and archive) have Watchtower mode enabled. 
    name: Validation Strategies
    stepItems: []
    uuid: d5c43d16-0c09-42e2-8526-b494c7ffa349
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: cba9faea-8dae-4085-abe7-674963fb0f8d
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: 7838a21b-dedb-4c3c-85d7-5387e31f9010
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: 868ae771-9d47-43b0-8d7e-f6ef6b2180b7
thumbnail: >-
  https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/running_a_validator_arbitrum_university_967/1699875911417_rectangle_104.png
uuid: running-a-validator-arbitrum-university-967
version: 1
priority: 50
