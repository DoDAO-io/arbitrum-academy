categories: []
content: 'Arbitrum Bridge: Seamless L1 to L2 Asset Transfer'
created: '2023-12-11T14:07:06.358Z'
guideType: onboarding
key: arbitrum-bridge-arbitrum-university-959
name: 'Arbitrum Bridge '
publishStatus: Live
steps:
  - content: >-
      ## What is Arbitrum Bridge?

      The Arbitrum Bridge is a sophisticated mechanism that connects Ethereum's
      mainnet (Layer-1) with the Arbitrum chains (Layer-2), allowing for the
      secure and efficient transfer of assets like ETH and ERC-20 tokens. It
      enhances scalability by handling a greater volume of transactions and
      mitigates congestion on the mainnet. The bridge is cost-effective,
      grouping transactions to reduce gas fees significantly. Security is
      paramount, with Ethereum's security model integrated and additional
      safeguards against malicious actions by validators. The bridge supports a
      wide range of assets, ensuring broad interoperability, and maintains
      decentralization by allowing open participation of validators. With a
      user-friendly interface, it simplifies asset transfer across layers,
      aligning with Arbitrum's goal to improve the Ethereum ecosystem's
      functionality and user experience.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1701191668148_arbitrum_bridge.png"/>
      </div>


      ## How do Bridges Work?

      Bridges like the Arbitrum bridge work by transferring the computational
      workload from Ethereumâ€™s main network (Layer 1) to the Arbitrum network
      (Layer 2). This transfer is done while maintaining the security features
      of Ethereum. Here's how it happens:


      ### Minting Assets

      When users want to move their assets, such as ETH or ERC-20 tokens, to
      Layer 2, they interact with the Arbitrum bridge. The bridge locks the
      user's assets into a smart contract on Ethereum, meaning those assets
      can't be moved within Layer 1 anymore. At the same time, an equivalent
      amount of these assets is created or "minted" on the Arbitrum network,
      which users can freely move and use. This minting process uses roll-up
      technology, which bundles many transactions into one. This batching
      reduces the amount of processing Ethereum has to do, which saves on
      transaction fees, known as gas fees, and allows for more transactions to
      be processed at once, thereby increasing scalability.


      <div align="center">
        <img style="max-height:700px;margin-bottom:50px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1701191705179_working_of%20bridge.png"/>
      </div>


      ### Burning Assets 

      For withdrawals from Arbitrum back to Ethereum, the process is reversed
      but includes an additional security step. The tokens on Arbitrum are
      burnt, meaning they are destroyed to prevent double-spending.
      Correspondingly, the smart contract on Ethereum releases the initially
      locked funds. This transaction is not immediate due to a "dispute period,"
      a week-long delay that allows for challenges and verification of the
      transaction's legitimacy on Ethereum before the assets are unlocked. This
      delay ensures the integrity and security of the withdrawal process,
      safeguarding the assets as they transition from Layer 2 back to Layer 1.
    name: 'About Arbitrum Bridge '
    stepItems: []
    uuid: 68eec6db-69ca-4477-8c76-00c8f4200dcb
  - content: ''
    name: Evaluation
    stepItems:
      - answerKeys:
          - C
        choices:
          - content: To connect different blockchains
            key: A
          - content: To create new cryptocurrencies
            key: B
          - content: To connect Ethereum's mainnet with the Arbitrum chains
            key: C
          - content: To mine new Ethereum tokens
            key: D
        content: What is the main function of the Arbitrum Bridge?
        type: SingleChoice
        uuid: 83ddaec3-ade0-40fb-90bf-ab14374feebb
        explanation: >-
          The Arbitrum Bridge connects Ethereum's mainnet (Layer-1) with the
          Arbitrum chains (Layer-2), allowing for the secure and efficient
          transfer of assets like ETH and ERC-20 tokens.
      - answerKeys:
          - B
        choices:
          - content: The assets are duplicated on both networks
            key: A
          - content: >-
              The assets are locked on Ethereum and minted on the Arbitrum
              network
            key: B
          - content: >-
              The assets are destroyed on Ethereum and recreated on the Arbitrum
              network
            key: C
          - content: The assets are transferred without any changes
            key: D
        content: >-
          What happens to the assets when they are moved from Ethereum to the
          Arbitrum network?
        type: SingleChoice
        uuid: 28547ed5-e280-4a6a-9fca-7f786671d663
        explanation: >-
          When users want to move their assets to Layer 2, they interact with
          the Arbitrum bridge. The bridge locks the user's assets into a smart
          contract on Ethereum, and an equivalent amount of these assets is
          created or 'minted' on the Arbitrum network.
      - answerKeys:
          - D
        choices:
          - content: To allow time for the assets to be transferred
            key: A
          - content: To allow time for the transaction fees to be processed
            key: B
          - content: >-
              To allow time for the assets to be converted back to their
              original form
            key: C
          - content: >-
              To allow for challenges and verification of the transaction's
              legitimacy
            key: D
        content: >-
          What is the purpose of the 'dispute period' during the withdrawal
          process from Arbitrum back to Ethereum?
        type: SingleChoice
        uuid: 63694aa7-4f62-4060-bf54-545f7d1a2a57
        explanation: >-
          The 'dispute period' is a week-long delay that allows for challenges
          and verification of the transaction's legitimacy on Ethereum before
          the assets are unlocked. This delay ensures the integrity and security
          of the withdrawal process.
    uuid: 059345d4-d9d4-4b9f-b0fd-2b72e8812a73
  - content: >-
      Layer 1 (L1) and Layer 2 (L2) bridging enables the movement of assets from
      the main Ethereum blockchain to secondary frameworks, reducing congestion
      and fees. The Arbitrum bridge carries out the following processes between
      Layer 1 and Layer 2:


      ## L1 contracts can submit L2 transactions

      A contract on Layer 1 (L1) can initiate a transaction on Layer 2 (L2)
      through the Nitro chain's inbox contract on Ethereum, similar to how a
      user might. This transaction is queued to be processed on L2, with its
      outcomes remaining inaccessible to the initiating L1 contract. While the
      transaction occurs on L2, the initiator on L1 is unable to view any
      resulting actions. This approach benefits from being straightforward and
      exhibiting low delay. 


      However, it has a drawback where the L2 transaction may fail if the
      initiating L1 contract does not accurately set the L2 gas price and
      maximum gas limit. The lack of visibility for the L1 initiator means
      there's no certainty that the L2 transaction will complete without issues.
      This limitation poses a significant risk for specific L1 to L2 transaction
      types. For instance, in a scenario where a token deposit occurs on L1 for
      accessibility at an L2 address, a successful L1 transaction followed by a
      failed L2 transaction results in tokens being locked in the L1 inbox
      contract with no way to recover them on either layer, which is
      problematic.


      ## L1 to L2 ticket-based transactions

      The ticket-based system for L1 to L2 transactions provides a more reliable
      alternative to standard calls by mitigating gas-related failures. An L1
      contract can issue a "retryable" transaction, which the Nitro chain
      attempts to execute on L2. If it fails, a "ticketID" is created for the
      failed transaction. This ticket can later be used by anyone to attempt the
      transaction again by calling a specific contract on L2 with the ticketID.
      The transaction details are stored, and the associated value is reserved
      from the sender's account. Successful redemption completes the transaction
      and invalidates the ticketID, while a failure allows for future redemption
      attempts. This method ensures that the transaction has a chance to succeed
      eventually, provided someone is willing to redeem the ticket, with costs
      known upfront and determined by the data size of the transaction. Tickets
      are valid for about a week, ensuring that the transaction won't be lost if
      it doesn't go through initially.


      ## L2 to L1 ticket-based calls

      Interactions from Layer 2 (L2) to Layer 1 (L1) utilize a ticket-based
      mechanism. An L2 contract can request a transaction on L1 by invoking a
      function on the ArbSys precompiled contract. Once the L2 submission is
      verified on L1, which can take several days, a ticket is generated within
      the L1 outbox contract. This ticket can be activated by anyone who calls a
      specific method on the L1 outbox and provides the ticketID. A ticket is
      considered successfully redeemed if the corresponding L1 transaction
      executes without failure.


      The tickets for these L2-to-L1 transactions are perpetual, remaining valid
      until they are redeemed. They incur no ongoing fees because they are
      stored as a Merkle hash in the Ethereum storage, which is permanent and
      does not charge rent. The initial storage costs for these ticket Merkle
      roots are financed by the fees from L2 transactions.
    name: L1 and L2 Bridging
    stepItems: []
    uuid: e57a1b9d-454b-49bf-a296-8e6a40ff692e
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: ddbd05bd-70c2-44c6-b2aa-bf4617f4d94e
  - content: >+
      The Arbitrum bridge allows users to transfer their funds between different
      chains, such as Ethereum and Arbitrum One. This process, known as
      bridging, involves depositing funds from a parent chain to a child chain
      or withdrawing funds from a child chain to a parent chain. In this guide,
      we will provide a step-by-step process for both depositing and withdrawing
      funds using the Arbitrum bridge.


      ## Depositing Funds


      #### Obtain Native Currency

      To bridge assets to another chain, such as from Ethereum to Arbitrum One,
      you must have the parent chain's native currency (e.g., ETH) for the
      transaction. You can acquire this either through a centralized exchange,
      an on-ramp service, or for testnets, via a faucet.


      #### Add Preferred Network to Wallet 

      To bridge assets using a wallet like MetaMask, add your target chain's RPC
      endpoint: open MetaMask, select 'Add Network' at the bottom, and enter the
      network details manually. Information for common Arbitrum chains (Arbitrum
      One, Nova, and Sepolia testnet) includes specific RPC URLs, Chain IDs, and
      currency symbols, with more details available on
      https://docs.arbitrum.io/node-running/node-providers 


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699011863312_arbitrum_step%202.png"/>
      </div>



      #### Initiate the Deposit

      To bridge ETH or ERC-20 tokens, visit https://bridge.arbitrum.io/ and
      connect your wallet to the source network. Choose the destination network
      (e.g., Arbitrum One or Nova), and select the token you wish to bridge. 


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012014633_step_3%20image%201.png"/>
      </div>


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012046014_step_3%20image%202.png"/>
      </div>


      Ensure you have enough ETH for the transaction fee, enter the amount to
      bridge, and confirm the transaction. Funds should transfer within 15-30
      minutes, depending on network traffic. Remember to switch your wallet to
      the destination chain to view your funds upon arrival.  


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012077413_step_3%20image%203.png"/>
      </div>

    name: Deposit using Arbitrum Bridge
    stepItems: []
    uuid: ce8891fc-c91f-4d37-bf36-7eb5d6f9adfb
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: 69bb080d-7af7-4261-b5e5-52ea3feb5d31
  - content: >+

      ## Withdrawing Funds


      #### Log in to the Arbitrum bridge

      Make sure you are logged in to the Arbitrum bridge with your web3 wallet.
      Connect to the source network (the chain from where you want to withdraw
      your assets). Choose the destination network where you want your assets to
      go. For example, if you want to withdraw funds to Ethereum mainnet, select
      Ethereum mainnet as the destination network.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012297002_withdraw_image%201.png"/>
      </div>


      #### Enter the amount and initiate the withdrawal

      Enter the amount of ETH or ERC-20 tokens you want to bridge in the "From"
      box and click on the "Move funds" button. Ensure that you have enough ETH
      in your wallet to cover the transaction fees.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012336404_withdraw_image%202.png"/>
      </div>


      #### Wait for the withdrawal period

      Once you initiate the withdrawal, there is a minimum 7-day withdrawal
      period for networks like Arbitrum One and Nova. During this period, you
      will have to wait for your funds to be transferred back to the parent
      chain. After the withdrawal period is over, switch to the destination
      network on your wallet and press the "Claim" button to receive your funds.
      Make sure to check the status of your withdrawal in the Transactions tab
      of your profile.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699012382443_withdraw_image%203.png"/>
      </div>

    name: Withdraw using Arbitrum Bridge
    stepItems: []
    uuid: 06491485-bc66-48d4-8cde-1402be4a4aa1
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: 5f0d9535-a144-4950-bd96-dfcff6be14d4
  - content: >-
      Token bridging allows projects to seamlessly connect their existing Layer
      1 (L1) tokens with the Arbitrum ecosystem. This integration enables the
      transfer of tokens between L1 and Layer 2 (L2) networks, providing
      increased scalability and efficiency. Following are the different ways to
      bridge tokens:


      #### Standard Gateway


      The standard gateway is the simplest method for bridging tokens. By
      choosing this option, an ERC-20 token will be automatically deployed on
      the Arbitrum network, acting as the L2 counterpart to your L1 token. This
      means that whenever a token is deposited on L1, an equivalent amount will
      be minted on L2, and vice versa. To learn more about the standard ERC-20
      gateway and its implementation, refer to the relevant section in the
      conceptual page.


      <div align="center">
        <img style="max-height:400px;margin-bottom:30px" src="https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1701192561429_how_to%20bridging%20tokens.png"/>
      </div>


      #### Generic-Custom Gateway


      If you require custom functionality for your ERC-20 token on Arbitrum, the
      generic-custom gateway is the way to go. With this method, you can deploy
      your counterpart token on Arbitrum with unique features tailored to your
      needs. Whether it's implementing specific rules or adding additional
      functionalities, the generic-custom gateway provides the flexibility you
      require. For more information on how to utilize the Arbitrum generic
      custom gateway, refer to the relevant section in the conceptual page.


      #### Custom Gateway


      In certain cases where a custom ERC-20 token is not sufficient, the custom
      gateway offers an additional layer of flexibility. This method is suitable
      when you need more control over the gateway, such as when your token has
      the ability to increase its supply on L2. With the custom gateway, you can
      ensure that L2-minted tokens can be withdrawn back to L1 and recognized by
      the L1 contract. For a detailed understanding of other types of gateways
      and their implementation, refer to the relevant section in the conceptual
      page.
    name: Ways to Bridge Tokens
    stepItems: []
    uuid: df19894b-5fce-4857-b6a6-87e4e9fd3311
  - content: ''
    name: Evaluation
    stepItems: []
    uuid: 095de5d0-5e63-480e-9e09-2e4c4e5e57e9
  - content: >-
      ## Step 1 


      -
      https://www.tokenmetrics.com/blog/arbitrum-bridge#key-features-of-the-arbitrum-bridge


      - https://www.binance.com/en/feed/post/665165
    name: 'Reference '
    stepItems: []
    uuid: e3add110-f5dd-4446-aec4-1766109c4464
thumbnail: >-
  https://d31h13bdjwgzxs.cloudfront.net/academy/arbitrum-university/Guide/arbitrum_bridge_arbitrum_university_959/1699877827641_rectangle_100.png
uuid: arbitrum-bridge-arbitrum-university-959
version: 1
priority: 50
